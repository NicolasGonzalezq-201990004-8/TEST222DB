// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: lester.proto

package lesterpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===== Mensajes =====
type OfferRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Team          string                 `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfferRequest) Reset() {
	*x = OfferRequest{}
	mi := &file_lester_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferRequest) ProtoMessage() {}

func (x *OfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferRequest.ProtoReflect.Descriptor instead.
func (*OfferRequest) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{0}
}

func (x *OfferRequest) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

type OfferReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasOffer      bool                   `protobuf:"varint,1,opt,name=has_offer,json=hasOffer,proto3" json:"has_offer,omitempty"`
	BaseLoot      int32                  `protobuf:"varint,2,opt,name=base_loot,json=baseLoot,proto3" json:"base_loot,omitempty"`
	ProbFranklin  int32                  `protobuf:"varint,3,opt,name=prob_franklin,json=probFranklin,proto3" json:"prob_franklin,omitempty"`
	ProbTrevor    int32                  `protobuf:"varint,4,opt,name=prob_trevor,json=probTrevor,proto3" json:"prob_trevor,omitempty"`
	PoliceRisk    int32                  `protobuf:"varint,5,opt,name=police_risk,json=policeRisk,proto3" json:"police_risk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfferReply) Reset() {
	*x = OfferReply{}
	mi := &file_lester_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferReply) ProtoMessage() {}

func (x *OfferReply) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferReply.ProtoReflect.Descriptor instead.
func (*OfferReply) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{1}
}

func (x *OfferReply) GetHasOffer() bool {
	if x != nil {
		return x.HasOffer
	}
	return false
}

func (x *OfferReply) GetBaseLoot() int32 {
	if x != nil {
		return x.BaseLoot
	}
	return 0
}

func (x *OfferReply) GetProbFranklin() int32 {
	if x != nil {
		return x.ProbFranklin
	}
	return 0
}

func (x *OfferReply) GetProbTrevor() int32 {
	if x != nil {
		return x.ProbTrevor
	}
	return 0
}

func (x *OfferReply) GetPoliceRisk() int32 {
	if x != nil {
		return x.PoliceRisk
	}
	return 0
}

type Decision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decision) Reset() {
	*x = Decision{}
	mi := &file_lester_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decision) ProtoMessage() {}

func (x *Decision) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decision.ProtoReflect.Descriptor instead.
func (*Decision) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{2}
}

func (x *Decision) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_lester_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{3}
}

func (x *Ack) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// (Fase 3/4 â€“ si las usas)
type RiskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskReq) Reset() {
	*x = RiskReq{}
	mi := &file_lester_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReq) ProtoMessage() {}

func (x *RiskReq) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReq.ProtoReflect.Descriptor instead.
func (*RiskReq) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{4}
}

type RiskReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PoliceRisk    int32                  `protobuf:"varint,1,opt,name=police_risk,json=policeRisk,proto3" json:"police_risk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskReply) Reset() {
	*x = RiskReply{}
	mi := &file_lester_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReply) ProtoMessage() {}

func (x *RiskReply) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReply.ProtoReflect.Descriptor instead.
func (*RiskReply) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{5}
}

func (x *RiskReply) GetPoliceRisk() int32 {
	if x != nil {
		return x.PoliceRisk
	}
	return 0
}

type StarsCtrl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Agent         string                 `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	PoliceRisk    int32                  `protobuf:"varint,2,opt,name=police_risk,json=policeRisk,proto3" json:"police_risk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StarsCtrl) Reset() {
	*x = StarsCtrl{}
	mi := &file_lester_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarsCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarsCtrl) ProtoMessage() {}

func (x *StarsCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarsCtrl.ProtoReflect.Descriptor instead.
func (*StarsCtrl) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{6}
}

func (x *StarsCtrl) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *StarsCtrl) GetPoliceRisk() int32 {
	if x != nil {
		return x.PoliceRisk
	}
	return 0
}

type PaymentReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int32                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentReq) Reset() {
	*x = PaymentReq{}
	mi := &file_lester_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentReq) ProtoMessage() {}

func (x *PaymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentReq.ProtoReflect.Descriptor instead.
func (*PaymentReq) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{7}
}

func (x *PaymentReq) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PaymentReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Response      string                 `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentReply) Reset() {
	*x = PaymentReply{}
	mi := &file_lester_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentReply) ProtoMessage() {}

func (x *PaymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_lester_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentReply.ProtoReflect.Descriptor instead.
func (*PaymentReply) Descriptor() ([]byte, []int) {
	return file_lester_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *PaymentReply) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

var File_lester_proto protoreflect.FileDescriptor

const file_lester_proto_rawDesc = "" +
	"\n" +
	"\flester.proto\x12\x06lester\"\"\n" +
	"\fOfferRequest\x12\x12\n" +
	"\x04team\x18\x01 \x01(\tR\x04team\"\xad\x01\n" +
	"\n" +
	"OfferReply\x12\x1b\n" +
	"\thas_offer\x18\x01 \x01(\bR\bhasOffer\x12\x1b\n" +
	"\tbase_loot\x18\x02 \x01(\x05R\bbaseLoot\x12#\n" +
	"\rprob_franklin\x18\x03 \x01(\x05R\fprobFranklin\x12\x1f\n" +
	"\vprob_trevor\x18\x04 \x01(\x05R\n" +
	"probTrevor\x12\x1f\n" +
	"\vpolice_risk\x18\x05 \x01(\x05R\n" +
	"policeRisk\"&\n" +
	"\bDecision\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\"\x17\n" +
	"\x03Ack\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\"\t\n" +
	"\aRiskReq\",\n" +
	"\tRiskReply\x12\x1f\n" +
	"\vpolice_risk\x18\x01 \x01(\x05R\n" +
	"policeRisk\"B\n" +
	"\tStarsCtrl\x12\x14\n" +
	"\x05agent\x18\x01 \x01(\tR\x05agent\x12\x1f\n" +
	"\vpolice_risk\x18\x02 \x01(\x05R\n" +
	"policeRisk\"$\n" +
	"\n" +
	"PaymentReq\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x05R\x06amount\":\n" +
	"\fPaymentReply\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x1a\n" +
	"\bresponse\x18\x02 \x01(\tR\bresponse2\xc4\x02\n" +
	"\rLesterService\x124\n" +
	"\bGetOffer\x12\x14.lester.OfferRequest\x1a\x12.lester.OfferReply\x12/\n" +
	"\x0eNotifyDecision\x12\x10.lester.Decision\x1a\v.lester.Ack\x125\n" +
	"\x0fQueryPoliceRisk\x12\x0f.lester.RiskReq\x1a\x11.lester.RiskReply\x12,\n" +
	"\n" +
	"StartStars\x12\x11.lester.StarsCtrl\x1a\v.lester.Ack\x12+\n" +
	"\tStopStars\x12\x11.lester.StarsCtrl\x1a\v.lester.Ack\x12:\n" +
	"\x0eConfirmPayment\x12\x12.lester.PaymentReq\x1a\x14.lester.PaymentReplyB\x17Z\x15lester/proto;lesterpbb\x06proto3"

var (
	file_lester_proto_rawDescOnce sync.Once
	file_lester_proto_rawDescData []byte
)

func file_lester_proto_rawDescGZIP() []byte {
	file_lester_proto_rawDescOnce.Do(func() {
		file_lester_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lester_proto_rawDesc), len(file_lester_proto_rawDesc)))
	})
	return file_lester_proto_rawDescData
}

var file_lester_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_lester_proto_goTypes = []any{
	(*OfferRequest)(nil), // 0: lester.OfferRequest
	(*OfferReply)(nil),   // 1: lester.OfferReply
	(*Decision)(nil),     // 2: lester.Decision
	(*Ack)(nil),          // 3: lester.Ack
	(*RiskReq)(nil),      // 4: lester.RiskReq
	(*RiskReply)(nil),    // 5: lester.RiskReply
	(*StarsCtrl)(nil),    // 6: lester.StarsCtrl
	(*PaymentReq)(nil),   // 7: lester.PaymentReq
	(*PaymentReply)(nil), // 8: lester.PaymentReply
}
var file_lester_proto_depIdxs = []int32{
	0, // 0: lester.LesterService.GetOffer:input_type -> lester.OfferRequest
	2, // 1: lester.LesterService.NotifyDecision:input_type -> lester.Decision
	4, // 2: lester.LesterService.QueryPoliceRisk:input_type -> lester.RiskReq
	6, // 3: lester.LesterService.StartStars:input_type -> lester.StarsCtrl
	6, // 4: lester.LesterService.StopStars:input_type -> lester.StarsCtrl
	7, // 5: lester.LesterService.ConfirmPayment:input_type -> lester.PaymentReq
	1, // 6: lester.LesterService.GetOffer:output_type -> lester.OfferReply
	3, // 7: lester.LesterService.NotifyDecision:output_type -> lester.Ack
	5, // 8: lester.LesterService.QueryPoliceRisk:output_type -> lester.RiskReply
	3, // 9: lester.LesterService.StartStars:output_type -> lester.Ack
	3, // 10: lester.LesterService.StopStars:output_type -> lester.Ack
	8, // 11: lester.LesterService.ConfirmPayment:output_type -> lester.PaymentReply
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_lester_proto_init() }
func file_lester_proto_init() {
	if File_lester_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lester_proto_rawDesc), len(file_lester_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lester_proto_goTypes,
		DependencyIndexes: file_lester_proto_depIdxs,
		MessageInfos:      file_lester_proto_msgTypes,
	}.Build()
	File_lester_proto = out.File
	file_lester_proto_goTypes = nil
	file_lester_proto_depIdxs = nil
}
